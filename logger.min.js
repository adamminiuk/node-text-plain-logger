/** node-text-plain-logger for Web | https://github.com/piecioshka/node-text-plain-logger **/
function logger(d){var c=0,b,e=["bom","dom","js"],a=e.length;logger.found=false;if(this instanceof logger){return logger}for(;c<a;++c){if((b=logger[e[c]](d))!==undefined){logger.found=true;break}}if(logger.found){return b}throw {name:"UnexpectedTypeError",message:"Undefined type of variable: "+d}}logger.found=false;if(typeof module!=="undefined"){module.exports=logger}if(typeof require!=="undefined"){var logger=require("./logger-core.js")}(function(){var a={};logger.bom=function(d){var b,c;for(c in a){if(a.hasOwnProperty(c)){if(a[c].call(null,d)){b=logger.parser.bom[c].call(this,d)}}}return b}}).call(this);if(typeof require!=="undefined"){var logger=require("./logger-core.js")}(function(){var a={};logger.dom=function(d){var b,c;for(c in a){if(a.hasOwnProperty(c)){if(a[c].call(null,d)){b=logger.parser.dom[c].call(this,d)}}}return b}}).call(this);if(typeof require!=="undefined"){var logger=require("./logger-core.js")}(function(){var a={Array:function(b){return b&&b.constructor&&b.pop&&b.push&&b.reverse&&(b.length!==undefined)&&b.shift&&b.sort&&b.splice&&b.unshift&&b.concat&&b.join&&b.slice&&b.indexOf},Arguments:function(b){return b&&(b.length!==undefined)&&Object.prototype.toString.call(b)==="[object Arguments]"},Boolean:function(b){return typeof b==="boolean"},Date:function(b){return b&&b.getDate&&b.getDay&&b.getFullYear&&b.getHours&&b.getMilliseconds&&b.getMinutes&&b.getMonth&&b.getSeconds},Function:function(b){return b&&b.constructor&&b.call&&b.apply&&b instanceof Function},Number:function(b){return typeof b==="number"&&!isNaN(b)&&isFinite(b)},Object:function(b){return b&&(b.length===undefined)&&b instanceof Object&&b.constructor===Object},RegExp:function(b){return b&&b.exec&&b.test},String:function(b){return typeof b==="string"},ArrayBuffer:function(b){return false},DataView:function(b){return false},Float32Array:function(b){return false},Float64Array:function(b){return false},Int16Array:function(b){return false},Int32Array:function(b){return false},Int8Array:function(b){return false},Uint16Array:function(b){return false},Uint32Array:function(b){return false},Uint8Array:function(b){return false},Uint8ClampedArray:function(b){return false},Error:function(b){return false},EvalError:function(b){return false},InternalError:function(b){return false},RangeError:function(b){return false},ReferenceError:function(b){return false},StopIteration:function(b){return false},SyntaxError:function(b){return false},TypeError:function(b){return false},URIError:function(b){return false},decodeURI:function(b){return false},decodeURIComponent:function(b){return false},encodeURI:function(b){return false},encodeURIComponent:function(b){return false},"eval":function(b){return false},isFinite:function(b){return false},isNaN:function(b){return false},parseFloat:function(b){return false},parseInt:function(b){return false},uneval:function(b){return false},"Infinity":function(b){return typeof b==="number"&&!isFinite(b)},JSON:function(b){return a.Object(b)},Math:function(b){return false},"NaN":function(b){return typeof b==="number"&&isNaN(b)},Null:function(b){return b===null},"undefined":function(b){return b===undefined}};logger.js=function(d){var b,c;for(c in a){if(a.hasOwnProperty(c)){if(a[c].call(null,d)){b=logger.parser.js[c].call(this,d)}}}return b}}).call(this);